name: Update Password
on:
  schedule:
    - cron: '*/15 * * * *'  # Каждые 15 минут
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Generate random password
        id: generate
        run: |
          # Улучшенная генерация пароля
          PART1=$(tr -dc A-Z0-9 </dev/urandom | head -c4)
          PART2=$(tr -dc A-Z0-9 </dev/urandom | head -c4)
          PART3=$(tr -dc A-Z0-9 </dev/urandom | head -c4)
          NEW_PASS="ART_FT-$PART1-$PART2-$PART3"
          echo "NEW_PASS=$NEW_PASS" >> $GITHUB_OUTPUT
          echo "Generated password: $NEW_PASS"

      - name: Verify GH_TOKEN
        run: |
          if [ -z "${{ secrets.UPD_TOKEN }}" ]; then
            echo "❌ Error: GIST_TOKEN secret is missing or empty!"
            exit 1
          else
            echo "✅ GIST_TOKEN is present (first 4 chars: ${GIST_TOKEN:0:4}...)"
          fi

      - name: Update Gist
        env:
          GIST_ID: "e5008466b6a0f11cf9013a43b845cb50"
          GH_TOKEN: ${{ secrets.UPD_TOKEN }}
        run: |
          # Формируем JSON с помощью jq
          JSON_DATA=$(jq -n \
            --arg pass "${{ steps.generate.outputs.NEW_PASS }}" \
            '{
              description: "Auto-updated password (changes every 15 min)",
              files: {
                "password.txt": {
                  content: $pass
                }
              }
            }')

          echo "Trying to update gist with data:"
          echo "$JSON_DATA"

          # Отправка запроса с подробным логированием
          RESPONSE=$(curl -v -X PATCH \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            -d "$JSON_DATA" \
            "https://api.github.com/gists/$GIST_ID" 2>&1)

          # Детальная проверка результата
          if echo "$RESPONSE" | grep -q '"updated_at"'; then
            echo "✅ Gist updated successfully!"
            UPDATED_AT=$(echo "$RESPONSE" | jq -r '.updated_at')
            echo "Update time: $UPDATED_AT"
          else
            echo "❌ Failed to update gist. Full response:"
            echo "$RESPONSE"
            
            # Проверка лимитов API
            RATE_LIMIT=$(curl -s -H "Authorization: token $GH_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/rate_limit)
            echo "Rate limit info:"
            echo "$RATE_LIMIT" | jq
            
            exit 1
          fi
