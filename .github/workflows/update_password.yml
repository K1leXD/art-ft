name: Update Password
on:
  schedule:
    - cron: '*/15 * * * *'  # Каждые 15 минут
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Setup jq
        run: sudo apt-get install -y jq

      - name: Generate random password
        id: generate
        run: |
          # Надежная генерация пароля
          PART1=$(tr -dc A-Z0-9 </dev/urandom | head -c4 || true)
          PART2=$(tr -dc A-Z0-9 </dev/urandom | head -c4 || true)
          PART3=$(tr -dc A-Z0-9 </dev/urandom | head -c4 || true)
          NEW_PASS="ART_FT-$PART1-$PART2-$PART3"
          echo "NEW_PASS=$NEW_PASS" >> $GITHUB_OUTPUT
          echo "Generated password: $NEW_PASS"

      - name: Verify GH_TOKEN
        run: |
          if [ -z "${{ secrets.UPD_TOKEN }}" ]; then
            echo "❌ Error: UPD_TOKEN secret is missing or empty!"
            exit 1
          else
            echo "✅ UPD_TOKEN is present"
          fi

      - name: Update Gist
        env:
          GIST_ID: "71260671daac59f9043b964e6cc83976"
          GH_TOKEN: ${{ secrets.UPD_TOKEN }}
        run: |
          # Формирование JSON
          JSON_PAYLOAD=$(cat <<EOF
          {
            "description": "Auto-updated password (changes every 15 min)",
            "files": {
              "password.txt": {
                "content": "${{ steps.generate.outputs.NEW_PASS }}"
              }
            }
          }
          EOF
          )

          echo "Trying to update gist with data:"
          echo "$JSON_PAYLOAD"

          # Отправка запроса
          RESPONSE=$(curl -sS -X PATCH \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            -d "$JSON_PAYLOAD" \
            "https://api.github.com/gists/$GIST_ID" 2>&1)

          # Обработка ответа
          if echo "$RESPONSE" | grep -q '"updated_at"'; then
            echo "✅ Gist updated successfully!"
            UPDATED_AT=$(echo "$RESPONSE" | jq -r '.updated_at' 2>/dev/null || echo "unknown")
            echo "Update time: $UPDATED_AT"
          else
            echo "❌ Failed to update gist. Response:"
            echo "$RESPONSE"
            
            # Проверка лимитов
            echo "Checking rate limits..."
            curl -s -H "Authorization: token $GH_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/rate_limit | jq . || true
            
            exit 1
          fi
